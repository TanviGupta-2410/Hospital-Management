{"ast":null,"code":"\"use client\";import{useState}from\"react\";import{Link,useNavigate}from\"react-router-dom\";import{ToastContainer}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";import{handleError,handleSuccess}from\"../../utils\";import LoadingSpinner from\"../../components/LoadingSpinner/LoadingSpinner\";import\"./Login.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){const[loginInfo,setLoginInfo]=useState({email:\"\",password:\"\"});const[rememberMe,setRememberMe]=useState(false);const[loading,setLoading]=useState(false);const navigate=useNavigate();const handleChange=e=>{const{name,value}=e.target;setLoginInfo(prev=>({...prev,[name]:value}));};const handleLogin=async e=>{e.preventDefault();const{email,password}=loginInfo;if(!email||!password){return handleError(\"Email and password are required\");}setLoading(true);try{const url=\"http://localhost:8080/auth/login\";const response=await fetch(url,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(loginInfo)});const result=await response.json();const{success,message,jwtToken,name,role,error}=result;if(success){handleSuccess(message);localStorage.setItem(\"token\",jwtToken);localStorage.setItem(\"loggedInUser\",name);localStorage.setItem(\"userRole\",role);setTimeout(()=>navigate(\"/dashboard\"),1500);}else if(error!==null&&error!==void 0&&error.details){handleError(error.details[0].message);}else{handleError(message);}}catch(err){console.error(\"Error in login request:\",err);handleError(\"Something went wrong. Please try again.\");}finally{setLoading(false);}};if(loading){return/*#__PURE__*/_jsx(LoadingSpinner,{message:\"Logging in...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"login-left\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-left-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"MediCare Plus\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Advanced Hospital Management System\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"login-right\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-form-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome Back\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please sign in to your account to continue\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleLogin,className:\"login-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:loginInfo.email,onChange:handleChange,placeholder:\"Enter your email\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"password-header\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(Link,{to:\"/forgot-password\",className:\"forgot-link\",children:\"Forgot Password?\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:loginInfo.password,onChange:handleChange,placeholder:\"Enter your password\",required:true})]}),/*#__PURE__*/_jsx(\"div\",{className:\"remember-me\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:rememberMe,onChange:()=>setRememberMe(!rememberMe)}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),\"Remember me\"]})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"sign-in-btn\",children:\"Sign In\"}),/*#__PURE__*/_jsx(\"div\",{className:\"login-footer\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:\"Create Account\"})]})})]})]})})]}),/*#__PURE__*/_jsx(ToastContainer,{})]});}export default Login;","map":{"version":3,"names":["useState","Link","useNavigate","ToastContainer","handleError","handleSuccess","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","Login","loginInfo","setLoginInfo","email","password","rememberMe","setRememberMe","loading","setLoading","navigate","handleChange","e","name","value","target","prev","handleLogin","preventDefault","url","response","fetch","method","headers","body","JSON","stringify","result","json","success","message","jwtToken","role","error","localStorage","setItem","setTimeout","details","err","console","className","children","onSubmit","htmlFor","type","id","onChange","placeholder","required","to","checked"],"sources":["C:/Users/kaavy/OneDrive/Desktop/Hospital-Management/frontend/src/pages/Login/Login.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport { ToastContainer } from \"react-toastify\"\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\nimport { handleError, handleSuccess } from \"../../utils\"\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\"\r\nimport \"./Login.css\"\r\n\r\nfunction Login() {\r\n  const [loginInfo, setLoginInfo] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  })\r\n  const [rememberMe, setRememberMe] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const navigate = useNavigate()\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setLoginInfo((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault()\r\n    const { email, password } = loginInfo\r\n\r\n    if (!email || !password) {\r\n      return handleError(\"Email and password are required\")\r\n    }\r\n\r\n    setLoading(true)\r\n\r\n    try {\r\n      const url = \"http://localhost:8080/auth/login\"\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(loginInfo),\r\n      })\r\n\r\n      const result = await response.json()\r\n      const { success, message, jwtToken, name, role, error } = result\r\n\r\n      if (success) {\r\n        handleSuccess(message)\r\n        localStorage.setItem(\"token\", jwtToken)\r\n        localStorage.setItem(\"loggedInUser\", name)\r\n        localStorage.setItem(\"userRole\", role)\r\n        setTimeout(() => navigate(\"/dashboard\"), 1500)\r\n      } else if (error?.details) {\r\n        handleError(error.details[0].message)\r\n      } else {\r\n        handleError(message)\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error in login request:\", err)\r\n      handleError(\"Something went wrong. Please try again.\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner message=\"Logging in...\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <div className=\"login-left\">\r\n          <div className=\"login-left-content\">\r\n            <h1>MediCare Plus</h1>\r\n            <p>Advanced Hospital Management System</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"login-right\">\r\n          <div className=\"login-form-wrapper\">\r\n            <div className=\"login-header\">\r\n              <h2>Welcome Back</h2>\r\n              <p>Please sign in to your account to continue</p>\r\n            </div>\r\n            \r\n            <form onSubmit={handleLogin} className=\"login-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email Address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  value={loginInfo.email}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Enter your email\"\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <div className=\"password-header\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Link to=\"/forgot-password\" className=\"forgot-link\">\r\n                    Forgot Password?\r\n                  </Link>\r\n                </div>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  value={loginInfo.password}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Enter your password\"\r\n                  required\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"remember-me\">\r\n                <label className=\"checkbox-container\">\r\n                  <input \r\n                    type=\"checkbox\" \r\n                    checked={rememberMe}\r\n                    onChange={() => setRememberMe(!rememberMe)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              \r\n              <button type=\"submit\" className=\"sign-in-btn\">\r\n                Sign In\r\n              </button>\r\n              \r\n              <div className=\"login-footer\">\r\n                <p>Don't have an account? <Link to=\"/signup\">Create Account</Link></p>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}