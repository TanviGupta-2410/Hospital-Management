{"ast":null,"code":"\"use client\";import{useState,useEffect}from\"react\";import Sidebar from\"../../components/Sidebar/Sidebar\";import LoadingSpinner from\"../../components/LoadingSpinner/LoadingSpinner\";import{handleError,handleSuccess}from\"../../utils\";import{ToastContainer}from\"react-toastify\";import\"./LabTestManagement.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LabTestManagement=()=>{const[loading,setLoading]=useState(false);const[labTests,setLabTests]=useState([]);const[patients,setPatients]=useState([]);const[showModal,setShowModal]=useState(false);const[editingTest,setEditingTest]=useState(null);const[searchTerm,setSearchTerm]=useState(\"\");const[testForm,setTestForm]=useState({patient:\"\",testName:\"\",testType:\"\",description:\"\",results:\"\",normalRange:\"\",status:\"Pending\",reportFile:null,notes:\"\"});const testTypes=[\"Blood Test\",\"Urine Test\",\"X-Ray\",\"CT Scan\",\"MRI\",\"Ultrasound\",\"ECG\",\"Echo\",\"Endoscopy\",\"Biopsy\",\"Pathology\",\"Microbiology\"];const testStatuses=[\"Pending\",\"In Progress\",\"Completed\",\"Cancelled\"];useEffect(()=>{fetchLabTests();fetchPatients();},[]);const fetchLabTests=async()=>{setLoading(true);try{const token=localStorage.getItem(\"token\");const response=await fetch(\"http://localhost:8080/api/lab-tests\",{headers:{Authorization:`Bearer ${token}`}});if(response.ok){const data=await response.json();setLabTests(data);}else{handleError(\"Failed to fetch lab tests\");}}catch(error){console.error(\"Fetch lab tests error:\",error);handleError(\"Error loading lab tests\");}finally{setLoading(false);}};const fetchPatients=async()=>{try{const token=localStorage.getItem(\"token\");const response=await fetch(\"http://localhost:8080/api/patients\",{headers:{Authorization:`Bearer ${token}`}});if(response.ok){const data=await response.json();setPatients(data);}}catch(error){console.error(\"Fetch patients error:\",error);}};const handleInputChange=e=>{const{name,value}=e.target;setTestForm(prev=>({...prev,[name]:value}));};const handleFileChange=e=>{setTestForm(prev=>({...prev,reportFile:e.target.files[0]}));};const handleSubmit=async e=>{e.preventDefault();setLoading(true);try{const testData={patient:testForm.patient,testName:testForm.testName,testType:testForm.testType,description:testForm.description,results:testForm.results,normalRange:testForm.normalRange,status:testForm.status,notes:testForm.notes};const token=localStorage.getItem(\"token\");const url=editingTest?`http://localhost:8080/api/lab-tests/${editingTest._id}`:\"http://localhost:8080/api/lab-tests\";const response=await fetch(url,{method:editingTest?\"PUT\":\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${token}`},body:JSON.stringify(testData)});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||\"Operation failed\");}// Remove the unused data assignment\nawait response.json();handleSuccess(editingTest?\"Lab test updated successfully\":\"Lab test created successfully\");setShowModal(false);setEditingTest(null);resetForm();fetchLabTests();}catch(error){console.error(\"Submit error:\",error);handleError(error.message||\"Error saving lab test\");}finally{setLoading(false);}};const handleStatusChange=async(testId,newStatus)=>{setLoading(true);try{const token=localStorage.getItem(\"token\");const response=await fetch(`http://localhost:8080/api/lab-tests/${testId}/status`,{method:\"PATCH\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${token}`},body:JSON.stringify({status:newStatus})});if(response.ok){handleSuccess(\"Test status updated successfully\");fetchLabTests();}else{handleError(\"Failed to update test status\");}}catch(error){console.error(\"Status update error:\",error);handleError(\"Error updating test status\");}finally{setLoading(false);}};const handleEdit=test=>{setEditingTest(test);setTestForm({patient:test.patient._id,testName:test.testName||\"\",testType:test.testType||\"\",description:test.description||\"\",results:test.results||\"\",normalRange:test.normalRange||\"\",status:test.status||\"Pending\",reportFile:null,notes:test.notes||\"\"});setShowModal(true);};const handleDelete=async testId=>{if(!window.confirm(\"Are you sure you want to delete this lab test?\"))return;setLoading(true);try{const token=localStorage.getItem(\"token\");const response=await fetch(`http://localhost:8080/api/lab-tests/${testId}`,{method:\"DELETE\",headers:{Authorization:`Bearer ${token}`}});if(response.ok){handleSuccess(\"Lab test deleted successfully\");fetchLabTests();}else{handleError(\"Failed to delete lab test\");}}catch(error){console.error(\"Delete error:\",error);handleError(\"Error deleting lab test\");}finally{setLoading(false);}};const resetForm=()=>{setTestForm({patient:\"\",testName:\"\",testType:\"\",description:\"\",results:\"\",normalRange:\"\",status:\"Pending\",reportFile:null,notes:\"\"});};const getStatusColor=status=>{switch(status){case\"Pending\":return\"status-pending\";case\"In Progress\":return\"status-progress\";case\"Completed\":return\"status-completed\";case\"Cancelled\":return\"status-cancelled\";default:return\"status-pending\";}};const isAbnormal=(results,normalRange)=>{if(!results||!normalRange)return false;// Simple check - in real implementation, you'd have more sophisticated logic\nreturn results.toLowerCase().includes(\"high\")||results.toLowerCase().includes(\"low\");};const filteredTests=labTests.filter(test=>{var _test$patient,_test$patient$name,_test$testName,_test$testId;return((_test$patient=test.patient)===null||_test$patient===void 0?void 0:(_test$patient$name=_test$patient.name)===null||_test$patient$name===void 0?void 0:_test$patient$name.toLowerCase().includes(searchTerm.toLowerCase()))||((_test$testName=test.testName)===null||_test$testName===void 0?void 0:_test$testName.toLowerCase().includes(searchTerm.toLowerCase()))||((_test$testId=test.testId)===null||_test$testId===void 0?void 0:_test$testId.toLowerCase().includes(searchTerm.toLowerCase()));});if(loading&&!showModal){return/*#__PURE__*/_jsx(LoadingSpinner,{message:\"Loading lab tests...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"lab-test-management-container\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"lab-test-management-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83E\\uDDEA Lab Test Management\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>{setEditingTest(null);resetForm();setShowModal(true);},children:\"Add New Test\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"search-section\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search tests by patient name, test name, or ID...\",className:\"search-input\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"tests-table-container\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Test ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Patient\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Test Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Test Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Results\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredTests.map(test=>{var _test$patient2,_test$patient3;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:test.testId}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"patient-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:(_test$patient2=test.patient)===null||_test$patient2===void 0?void 0:_test$patient2.name}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:(_test$patient3=test.patient)===null||_test$patient3===void 0?void 0:_test$patient3.patientId})]})}),/*#__PURE__*/_jsx(\"td\",{children:test.testName}),/*#__PURE__*/_jsx(\"td\",{children:test.testType}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:`status-badge ${getStatusColor(test.status)}`,children:test.status})}),/*#__PURE__*/_jsx(\"td\",{children:test.results?/*#__PURE__*/_jsxs(\"div\",{className:`results ${isAbnormal(test.results,test.normalRange)?\"abnormal\":\"normal\"}`,children:[test.results,isAbnormal(test.results,test.normalRange)&&/*#__PURE__*/_jsx(\"span\",{className:\"flag\",children:\"\\u26A0\\uFE0F\"})]}):/*#__PURE__*/_jsx(\"span\",{className:\"no-results\",children:\"Pending\"})}),/*#__PURE__*/_jsx(\"td\",{children:new Date(test.createdAt).toLocaleDateString()}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary btn-sm\",onClick:()=>handleEdit(test),children:\"Edit\"}),test.status===\"Pending\"&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info btn-sm\",onClick:()=>handleStatusChange(test._id,\"In Progress\"),children:\"Start\"}),test.status===\"In Progress\"&&/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success btn-sm\",onClick:()=>handleStatusChange(test._id,\"Completed\"),children:\"Complete\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-sm\",onClick:()=>handleDelete(test._id),children:\"Delete\"})]})})]},test._id);})})]}),filteredTests.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"no-data\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No lab tests found\"})})]}),showModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editingTest?\"Edit Lab Test\":\"Add New Lab Test\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:()=>{setShowModal(false);setEditingTest(null);resetForm();},children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"test-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Patient *\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"patient\",className:\"form-select\",value:testForm.patient,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Patient\"}),patients.map(patient=>/*#__PURE__*/_jsxs(\"option\",{value:patient._id,children:[patient.name,\" - \",patient.patientId]},patient._id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Test Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"testName\",className:\"form-input\",value:testForm.testName,onChange:handleInputChange,placeholder:\"e.g., Complete Blood Count\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Test Type *\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"testType\",className:\"form-select\",value:testForm.testType,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Test Type\"}),testTypes.map(type=>/*#__PURE__*/_jsx(\"option\",{value:type,children:type},type))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Status\"}),/*#__PURE__*/_jsx(\"select\",{name:\"status\",className:\"form-select\",value:testForm.status,onChange:handleInputChange,children:testStatuses.map(status=>/*#__PURE__*/_jsx(\"option\",{value:status,children:status},status))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",className:\"form-input\",rows:\"3\",value:testForm.description,onChange:handleInputChange,placeholder:\"Test description or instructions...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Results\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"results\",className:\"form-input\",rows:\"3\",value:testForm.results,onChange:handleInputChange,placeholder:\"Test results...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Normal Range\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"normalRange\",className:\"form-input\",rows:\"3\",value:testForm.normalRange,onChange:handleInputChange,placeholder:\"Normal range values...\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Report File\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"reportFile\",className:\"form-input\",onChange:handleFileChange,accept:\".pdf,.jpg,.jpeg,.png,.doc,.docx\"}),/*#__PURE__*/_jsx(\"small\",{className:\"file-help\",children:\"Accepted formats: PDF, Images, Word documents\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Notes\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"notes\",className:\"form-input\",rows:\"2\",value:testForm.notes,onChange:handleInputChange,placeholder:\"Additional notes...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary\",onClick:()=>{setShowModal(false);setEditingTest(null);resetForm();},children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:loading,children:loading?\"Saving...\":editingTest?\"Update Test\":\"Add Test\"})]})]})]})})]}),/*#__PURE__*/_jsx(ToastContainer,{})]});};export default LabTestManagement;","map":{"version":3,"names":["useState","useEffect","Sidebar","LoadingSpinner","handleError","handleSuccess","ToastContainer","jsx","_jsx","jsxs","_jsxs","LabTestManagement","loading","setLoading","labTests","setLabTests","patients","setPatients","showModal","setShowModal","editingTest","setEditingTest","searchTerm","setSearchTerm","testForm","setTestForm","patient","testName","testType","description","results","normalRange","status","reportFile","notes","testTypes","testStatuses","fetchLabTests","fetchPatients","token","localStorage","getItem","response","fetch","headers","Authorization","ok","data","json","error","console","handleInputChange","e","name","value","target","prev","handleFileChange","files","handleSubmit","preventDefault","testData","url","_id","method","body","JSON","stringify","errorData","Error","message","resetForm","handleStatusChange","testId","newStatus","handleEdit","test","handleDelete","window","confirm","getStatusColor","isAbnormal","toLowerCase","includes","filteredTests","filter","_test$patient","_test$patient$name","_test$testName","_test$testId","className","children","onClick","type","placeholder","onChange","map","_test$patient2","_test$patient3","patientId","Date","createdAt","toLocaleDateString","length","onSubmit","required","rows","accept","disabled"],"sources":["C:/Users/kaavy/OneDrive/Desktop/Hospital-Management/frontend/src/pages/LabTestManagement/LabTestManagement.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport Sidebar from \"../../components/Sidebar/Sidebar\"\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\"\r\nimport { handleError, handleSuccess } from \"../../utils\"\r\nimport { ToastContainer } from \"react-toastify\"\r\nimport \"./LabTestManagement.css\"\r\n\r\nconst LabTestManagement = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [labTests, setLabTests] = useState([])\r\n  const [patients, setPatients] = useState([])\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [editingTest, setEditingTest] = useState(null)\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [testForm, setTestForm] = useState({\r\n    patient: \"\",\r\n    testName: \"\",\r\n    testType: \"\",\r\n    description: \"\",\r\n    results: \"\",\r\n    normalRange: \"\",\r\n    status: \"Pending\",\r\n    reportFile: null,\r\n    notes: \"\",\r\n  })\r\n\r\n  const testTypes = [\r\n    \"Blood Test\",\r\n    \"Urine Test\",\r\n    \"X-Ray\",\r\n    \"CT Scan\",\r\n    \"MRI\",\r\n    \"Ultrasound\",\r\n    \"ECG\",\r\n    \"Echo\",\r\n    \"Endoscopy\",\r\n    \"Biopsy\",\r\n    \"Pathology\",\r\n    \"Microbiology\",\r\n  ]\r\n\r\n  const testStatuses = [\"Pending\", \"In Progress\", \"Completed\", \"Cancelled\"]\r\n\r\n  useEffect(() => {\r\n    fetchLabTests()\r\n    fetchPatients()\r\n  }, [])\r\n\r\n  const fetchLabTests = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      const response = await fetch(\"http://localhost:8080/api/lab-tests\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        setLabTests(data)\r\n      } else {\r\n        handleError(\"Failed to fetch lab tests\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Fetch lab tests error:\", error)\r\n      handleError(\"Error loading lab tests\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      const response = await fetch(\"http://localhost:8080/api/patients\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        setPatients(data)\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Fetch patients error:\", error)\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target\r\n    setTestForm((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleFileChange = (e) => {\r\n    setTestForm((prev) => ({\r\n      ...prev,\r\n      reportFile: e.target.files[0],\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n\r\n    try {\r\n      const testData = {\r\n        patient: testForm.patient,\r\n        testName: testForm.testName,\r\n        testType: testForm.testType,\r\n        description: testForm.description,\r\n        results: testForm.results,\r\n        normalRange: testForm.normalRange,\r\n        status: testForm.status,\r\n        notes: testForm.notes,\r\n      }\r\n\r\n      const token = localStorage.getItem(\"token\")\r\n      const url = editingTest\r\n        ? `http://localhost:8080/api/lab-tests/${editingTest._id}`\r\n        : \"http://localhost:8080/api/lab-tests\"\r\n\r\n      const response = await fetch(url, {\r\n        method: editingTest ? \"PUT\" : \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(testData),\r\n      })\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json()\r\n        throw new Error(errorData.message || \"Operation failed\")\r\n      }\r\n\r\n      // Remove the unused data assignment\r\n      await response.json()\r\n      handleSuccess(editingTest ? \"Lab test updated successfully\" : \"Lab test created successfully\")\r\n      setShowModal(false)\r\n      setEditingTest(null)\r\n      resetForm()\r\n      fetchLabTests()\r\n    } catch (error) {\r\n      console.error(\"Submit error:\", error)\r\n      handleError(error.message || \"Error saving lab test\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleStatusChange = async (testId, newStatus) => {\r\n    setLoading(true)\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      const response = await fetch(`http://localhost:8080/api/lab-tests/${testId}/status`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ status: newStatus }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        handleSuccess(\"Test status updated successfully\")\r\n        fetchLabTests()\r\n      } else {\r\n        handleError(\"Failed to update test status\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Status update error:\", error)\r\n      handleError(\"Error updating test status\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleEdit = (test) => {\r\n    setEditingTest(test)\r\n    setTestForm({\r\n      patient: test.patient._id,\r\n      testName: test.testName || \"\",\r\n      testType: test.testType || \"\",\r\n      description: test.description || \"\",\r\n      results: test.results || \"\",\r\n      normalRange: test.normalRange || \"\",\r\n      status: test.status || \"Pending\",\r\n      reportFile: null,\r\n      notes: test.notes || \"\",\r\n    })\r\n    setShowModal(true)\r\n  }\r\n\r\n  const handleDelete = async (testId) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this lab test?\")) return\r\n\r\n    setLoading(true)\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      const response = await fetch(`http://localhost:8080/api/lab-tests/${testId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      if (response.ok) {\r\n        handleSuccess(\"Lab test deleted successfully\")\r\n        fetchLabTests()\r\n      } else {\r\n        handleError(\"Failed to delete lab test\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Delete error:\", error)\r\n      handleError(\"Error deleting lab test\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setTestForm({\r\n      patient: \"\",\r\n      testName: \"\",\r\n      testType: \"\",\r\n      description: \"\",\r\n      results: \"\",\r\n      normalRange: \"\",\r\n      status: \"Pending\",\r\n      reportFile: null,\r\n      notes: \"\",\r\n    })\r\n  }\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case \"Pending\":\r\n        return \"status-pending\"\r\n      case \"In Progress\":\r\n        return \"status-progress\"\r\n      case \"Completed\":\r\n        return \"status-completed\"\r\n      case \"Cancelled\":\r\n        return \"status-cancelled\"\r\n      default:\r\n        return \"status-pending\"\r\n    }\r\n  }\r\n\r\n  const isAbnormal = (results, normalRange) => {\r\n    if (!results || !normalRange) return false\r\n    // Simple check - in real implementation, you'd have more sophisticated logic\r\n    return results.toLowerCase().includes(\"high\") || results.toLowerCase().includes(\"low\")\r\n  }\r\n\r\n  const filteredTests = labTests.filter(\r\n    (test) =>\r\n      test.patient?.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      test.testName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      test.testId?.toLowerCase().includes(searchTerm.toLowerCase()),\r\n  )\r\n\r\n  if (loading && !showModal) {\r\n    return <LoadingSpinner message=\"Loading lab tests...\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"lab-test-management-container\">\r\n      <Sidebar />\r\n      <div className=\"lab-test-management-content\">\r\n        <div className=\"page-header\">\r\n          <h1>🧪 Lab Test Management</h1>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setEditingTest(null)\r\n              resetForm()\r\n              setShowModal(true)\r\n            }}\r\n          >\r\n            Add New Test\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"search-section\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search tests by patient name, test name, or ID...\"\r\n            className=\"search-input\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"tests-table-container\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Test ID</th>\r\n                <th>Patient</th>\r\n                <th>Test Name</th>\r\n                <th>Test Type</th>\r\n                <th>Status</th>\r\n                <th>Results</th>\r\n                <th>Date</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredTests.map((test) => (\r\n                <tr key={test._id}>\r\n                  <td>{test.testId}</td>\r\n                  <td>\r\n                    <div className=\"patient-info\">\r\n                      <strong>{test.patient?.name}</strong>\r\n                      <br />\r\n                      <small>{test.patient?.patientId}</small>\r\n                    </div>\r\n                  </td>\r\n                  <td>{test.testName}</td>\r\n                  <td>{test.testType}</td>\r\n                  <td>\r\n                    <span className={`status-badge ${getStatusColor(test.status)}`}>{test.status}</span>\r\n                  </td>\r\n                  <td>\r\n                    {test.results ? (\r\n                      <div className={`results ${isAbnormal(test.results, test.normalRange) ? \"abnormal\" : \"normal\"}`}>\r\n                        {test.results}\r\n                        {isAbnormal(test.results, test.normalRange) && <span className=\"flag\">⚠️</span>}\r\n                      </div>\r\n                    ) : (\r\n                      <span className=\"no-results\">Pending</span>\r\n                    )}\r\n                  </td>\r\n                  <td>{new Date(test.createdAt).toLocaleDateString()}</td>\r\n                  <td>\r\n                    <div className=\"action-buttons\">\r\n                      <button className=\"btn btn-secondary btn-sm\" onClick={() => handleEdit(test)}>\r\n                        Edit\r\n                      </button>\r\n                      {test.status === \"Pending\" && (\r\n                        <button\r\n                          className=\"btn btn-info btn-sm\"\r\n                          onClick={() => handleStatusChange(test._id, \"In Progress\")}\r\n                        >\r\n                          Start\r\n                        </button>\r\n                      )}\r\n                      {test.status === \"In Progress\" && (\r\n                        <button\r\n                          className=\"btn btn-success btn-sm\"\r\n                          onClick={() => handleStatusChange(test._id, \"Completed\")}\r\n                        >\r\n                          Complete\r\n                        </button>\r\n                      )}\r\n                      <button className=\"btn btn-danger btn-sm\" onClick={() => handleDelete(test._id)}>\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          {filteredTests.length === 0 && (\r\n            <div className=\"no-data\">\r\n              <p>No lab tests found</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {showModal && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <div className=\"modal-header\">\r\n                <h2>{editingTest ? \"Edit Lab Test\" : \"Add New Lab Test\"}</h2>\r\n                <button\r\n                  className=\"close-btn\"\r\n                  onClick={() => {\r\n                    setShowModal(false)\r\n                    setEditingTest(null)\r\n                    resetForm()\r\n                  }}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n\r\n              <form onSubmit={handleSubmit} className=\"test-form\">\r\n                <div className=\"form-grid\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Patient *</label>\r\n                    <select\r\n                      name=\"patient\"\r\n                      className=\"form-select\"\r\n                      value={testForm.patient}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select Patient</option>\r\n                      {patients.map((patient) => (\r\n                        <option key={patient._id} value={patient._id}>\r\n                          {patient.name} - {patient.patientId}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Test Name *</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"testName\"\r\n                      className=\"form-input\"\r\n                      value={testForm.testName}\r\n                      onChange={handleInputChange}\r\n                      placeholder=\"e.g., Complete Blood Count\"\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Test Type *</label>\r\n                    <select\r\n                      name=\"testType\"\r\n                      className=\"form-select\"\r\n                      value={testForm.testType}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select Test Type</option>\r\n                      {testTypes.map((type) => (\r\n                        <option key={type} value={type}>\r\n                          {type}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Status</label>\r\n                    <select name=\"status\" className=\"form-select\" value={testForm.status} onChange={handleInputChange}>\r\n                      {testStatuses.map((status) => (\r\n                        <option key={status} value={status}>\r\n                          {status}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\">Description</label>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    className=\"form-input\"\r\n                    rows=\"3\"\r\n                    value={testForm.description}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Test description or instructions...\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-grid\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Results</label>\r\n                    <textarea\r\n                      name=\"results\"\r\n                      className=\"form-input\"\r\n                      rows=\"3\"\r\n                      value={testForm.results}\r\n                      onChange={handleInputChange}\r\n                      placeholder=\"Test results...\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Normal Range</label>\r\n                    <textarea\r\n                      name=\"normalRange\"\r\n                      className=\"form-input\"\r\n                      rows=\"3\"\r\n                      value={testForm.normalRange}\r\n                      onChange={handleInputChange}\r\n                      placeholder=\"Normal range values...\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\">Report File</label>\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"reportFile\"\r\n                    className=\"form-input\"\r\n                    onChange={handleFileChange}\r\n                    accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\r\n                  />\r\n                  <small className=\"file-help\">Accepted formats: PDF, Images, Word documents</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\">Notes</label>\r\n                  <textarea\r\n                    name=\"notes\"\r\n                    className=\"form-input\"\r\n                    rows=\"2\"\r\n                    value={testForm.notes}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Additional notes...\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-actions\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => {\r\n                      setShowModal(false)\r\n                      setEditingTest(null)\r\n                      resetForm()\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n                    {loading ? \"Saving...\" : editingTest ? \"Update Test\" : \"Add Test\"}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LabTestManagement\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}