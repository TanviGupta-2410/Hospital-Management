{"ast":null,"code":"\"use client\";import{useState,useEffect}from\"react\";import Sidebar from\"../../components/Sidebar/Sidebar\";import LoadingSpinner from\"../../components/LoadingSpinner/LoadingSpinner\";import{handleError,handleSuccess}from\"../../utils\";import{ToastContainer}from\"react-toastify\";import\"./AppointmentScheduling.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AppointmentScheduling=()=>{const[loading,setLoading]=useState(false);const[appointments,setAppointments]=useState([]);const[patients,setPatients]=useState([]);const[doctors,setDoctors]=useState([]);const[showModal,setShowModal]=useState(false);const[editingAppointment,setEditingAppointment]=useState(null);const[selectedDate,setSelectedDate]=useState(new Date().toISOString().split(\"T\")[0]);const[appointmentForm,setAppointmentForm]=useState({patient:\"\",doctor:\"\",appointmentDate:\"\",appointmentTime:\"\",reason:\"\",notes:\"\"});const timeSlots=[\"09:00\",\"09:30\",\"10:00\",\"10:30\",\"11:00\",\"11:30\",\"12:00\",\"12:30\",\"14:00\",\"14:30\",\"15:00\",\"15:30\",\"16:00\",\"16:30\",\"17:00\",\"17:30\",\"18:00\",\"18:30\"];useEffect(()=>{fetchAppointments();fetchPatients();fetchDoctors();},[]);useEffect(()=>{if(selectedDate){fetchAppointmentsByDate(selectedDate);}},[selectedDate]);const fetchAppointments=async()=>{setLoading(true);try{const token=localStorage.getItem(\"token\");const response=await fetch(\"http://localhost:8080/api/appointments\",{headers:{Authorization:`Bearer ${token}`}});if(response.ok){const data=await response.json();setAppointments(data);}else{handleError(\"Failed to fetch appointments\");}}catch(error){console.error(\"Fetch appointments error:\",error);handleError(\"Error loading appointments\");}finally{setLoading(false);}};const fetchAppointmentsByDate=async date=>{try{const token=localStorage.getItem(\"token\");const response=await fetch(`http://localhost:8080/api/appointments/date/${date}`,{headers:{Authorization:`Bearer ${token}`}});if(response.ok){const data=await response.json();setAppointments(data);}}catch(error){console.error(\"Fetch appointments by date error:\",error);}};const fetchPatients=async()=>{try{const token=localStorage.getItem(\"token\");const response=await fetch(\"http://localhost:8080/api/patients\",{headers:{Authorization:`Bearer ${token}`}});if(response.ok){const data=await response.json();setPatients(data);}}catch(error){console.error(\"Fetch patients error:\",error);}};const fetchDoctors=async()=>{try{const token=localStorage.getItem(\"token\");const response=await fetch(\"http://localhost:8080/api/doctors\",{headers:{Authorization:`Bearer ${token}`}});if(response.ok){const data=await response.json();setDoctors(data);}}catch(error){console.error(\"Fetch doctors error:\",error);}};const handleInputChange=e=>{const{name,value}=e.target;setAppointmentForm(prev=>({...prev,[name]:value}));};const getAvailableTimeSlots=(doctorId,date)=>{if(!doctorId||!date)return timeSlots;const bookedSlots=appointments.filter(apt=>apt.doctor._id===doctorId&&apt.appointmentDate.split(\"T\")[0]===date&&apt.status!==\"Cancelled\").map(apt=>apt.appointmentTime);return timeSlots.filter(slot=>!bookedSlots.includes(slot));};const handleSubmit=async e=>{e.preventDefault();setLoading(true);try{const token=localStorage.getItem(\"token\");const url=editingAppointment?`http://localhost:8080/api/appointments/${editingAppointment._id}`:\"http://localhost:8080/api/appointments\";const method=editingAppointment?\"PUT\":\"POST\";const response=await fetch(url,{method,headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${token}`},body:JSON.stringify(appointmentForm)});if(response.ok){handleSuccess(editingAppointment?\"Appointment updated successfully\":\"Appointment scheduled successfully\");setShowModal(false);setEditingAppointment(null);resetForm();fetchAppointments();}else{const error=await response.json();handleError(error.message||\"Operation failed\");}}catch(error){console.error(\"Submit error:\",error);handleError(\"Error saving appointment\");}finally{setLoading(false);}};const handleStatusChange=async(appointmentId,newStatus)=>{setLoading(true);try{const token=localStorage.getItem(\"token\");const response=await fetch(`http://localhost:8080/api/appointments/${appointmentId}/status`,{method:\"PATCH\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${token}`},body:JSON.stringify({status:newStatus})});if(response.ok){handleSuccess(\"Appointment status updated successfully\");fetchAppointments();}else{handleError(\"Failed to update appointment status\");}}catch(error){console.error(\"Status update error:\",error);handleError(\"Error updating appointment status\");}finally{setLoading(false);}};const handleEdit=appointment=>{setEditingAppointment(appointment);setAppointmentForm({patient:appointment.patient._id,doctor:appointment.doctor._id,appointmentDate:appointment.appointmentDate.split(\"T\")[0],appointmentTime:appointment.appointmentTime,reason:appointment.reason||\"\",notes:appointment.notes||\"\"});setShowModal(true);};const resetForm=()=>{setAppointmentForm({patient:\"\",doctor:\"\",appointmentDate:\"\",appointmentTime:\"\",reason:\"\",notes:\"\"});};const getStatusColor=status=>{switch(status){case\"Scheduled\":return\"status-scheduled\";case\"Completed\":return\"status-completed\";case\"Cancelled\":return\"status-cancelled\";case\"No Show\":return\"status-no-show\";default:return\"status-scheduled\";}};if(loading&&!showModal){return/*#__PURE__*/_jsx(LoadingSpinner,{message:\"Loading appointments...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"appointment-scheduling-container\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"appointment-scheduling-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDCC6 Appointment Scheduling\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>{setEditingAppointment(null);resetForm();setShowModal(true);},children:\"Schedule New Appointment\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date-filter\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Filter by Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",className:\"form-input date-input\",value:selectedDate,onChange:e=>setSelectedDate(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"appointments-table-container\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Appointment ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Patient\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Doctor\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Reason\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:appointments.map(appointment=>{var _appointment$patient,_appointment$patient2,_appointment$doctor,_appointment$doctor2;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:appointment.appointmentId}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"patient-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:(_appointment$patient=appointment.patient)===null||_appointment$patient===void 0?void 0:_appointment$patient.name}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:(_appointment$patient2=appointment.patient)===null||_appointment$patient2===void 0?void 0:_appointment$patient2.patientId})]})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"doctor-info\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Dr. \",(_appointment$doctor=appointment.doctor)===null||_appointment$doctor===void 0?void 0:_appointment$doctor.name]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"small\",{children:(_appointment$doctor2=appointment.doctor)===null||_appointment$doctor2===void 0?void 0:_appointment$doctor2.specialization})]})}),/*#__PURE__*/_jsx(\"td\",{children:new Date(appointment.appointmentDate).toLocaleDateString()}),/*#__PURE__*/_jsx(\"td\",{children:appointment.appointmentTime}),/*#__PURE__*/_jsx(\"td\",{children:appointment.reason}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:`status-badge ${getStatusColor(appointment.status)}`,children:appointment.status})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary btn-sm\",onClick:()=>handleEdit(appointment),children:\"Edit\"}),appointment.status===\"Scheduled\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success btn-sm\",onClick:()=>handleStatusChange(appointment._id,\"Completed\"),children:\"Complete\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-sm\",onClick:()=>handleStatusChange(appointment._id,\"Cancelled\"),children:\"Cancel\"})]})]})})]},appointment._id);})})]}),appointments.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"no-data\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No appointments found for the selected date\"})})]}),showModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editingAppointment?\"Edit Appointment\":\"Schedule New Appointment\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:()=>{setShowModal(false);setEditingAppointment(null);resetForm();},children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"appointment-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Patient *\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"patient\",className:\"form-select\",value:appointmentForm.patient,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Patient\"}),patients.map(patient=>/*#__PURE__*/_jsxs(\"option\",{value:patient._id,children:[patient.name,\" - \",patient.patientId]},patient._id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Doctor *\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"doctor\",className:\"form-select\",value:appointmentForm.doctor,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Doctor\"}),doctors.map(doctor=>/*#__PURE__*/_jsxs(\"option\",{value:doctor._id,children:[\"Dr. \",doctor.name,\" - \",doctor.specialization]},doctor._id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Appointment Date *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"appointmentDate\",className:\"form-input\",value:appointmentForm.appointmentDate,onChange:handleInputChange,min:new Date().toISOString().split(\"T\")[0],required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Appointment Time *\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"appointmentTime\",className:\"form-select\",value:appointmentForm.appointmentTime,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Time\"}),getAvailableTimeSlots(appointmentForm.doctor,appointmentForm.appointmentDate).map(time=>/*#__PURE__*/_jsx(\"option\",{value:time,children:time},time))]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Reason for Visit *\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"reason\",className:\"form-input\",rows:\"3\",value:appointmentForm.reason,onChange:handleInputChange,placeholder:\"Describe the reason for the appointment...\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label\",children:\"Additional Notes\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"notes\",className:\"form-input\",rows:\"2\",value:appointmentForm.notes,onChange:handleInputChange,placeholder:\"Any additional notes or instructions...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-secondary\",onClick:()=>{setShowModal(false);setEditingAppointment(null);resetForm();},children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:loading,children:loading?\"Saving...\":editingAppointment?\"Update Appointment\":\"Schedule Appointment\"})]})]})]})})]}),/*#__PURE__*/_jsx(ToastContainer,{})]});};export default AppointmentScheduling;","map":{"version":3,"names":["useState","useEffect","Sidebar","LoadingSpinner","handleError","handleSuccess","ToastContainer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AppointmentScheduling","loading","setLoading","appointments","setAppointments","patients","setPatients","doctors","setDoctors","showModal","setShowModal","editingAppointment","setEditingAppointment","selectedDate","setSelectedDate","Date","toISOString","split","appointmentForm","setAppointmentForm","patient","doctor","appointmentDate","appointmentTime","reason","notes","timeSlots","fetchAppointments","fetchPatients","fetchDoctors","fetchAppointmentsByDate","token","localStorage","getItem","response","fetch","headers","Authorization","ok","data","json","error","console","date","handleInputChange","e","name","value","target","prev","getAvailableTimeSlots","doctorId","bookedSlots","filter","apt","_id","status","map","slot","includes","handleSubmit","preventDefault","url","method","body","JSON","stringify","resetForm","message","handleStatusChange","appointmentId","newStatus","handleEdit","appointment","getStatusColor","className","children","onClick","type","onChange","_appointment$patient","_appointment$patient2","_appointment$doctor","_appointment$doctor2","patientId","specialization","toLocaleDateString","length","onSubmit","required","min","time","rows","placeholder","disabled"],"sources":["C:/Users/kaavy/OneDrive/Desktop/Hospital-Management/frontend/src/pages/AppointmentScheduling/AppointmentScheduling.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport Sidebar from \"../../components/Sidebar/Sidebar\"\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\"\r\nimport { handleError, handleSuccess } from \"../../utils\"\r\nimport { ToastContainer } from \"react-toastify\"\r\nimport \"./AppointmentScheduling.css\"\r\n\r\nconst AppointmentScheduling = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [appointments, setAppointments] = useState([])\r\n  const [patients, setPatients] = useState([])\r\n  const [doctors, setDoctors] = useState([])\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [editingAppointment, setEditingAppointment] = useState(null)\r\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split(\"T\")[0])\r\n  const [appointmentForm, setAppointmentForm] = useState({\r\n    patient: \"\",\r\n    doctor: \"\",\r\n    appointmentDate: \"\",\r\n    appointmentTime: \"\",\r\n    reason: \"\",\r\n    notes: \"\",\r\n  })\r\n\r\n  const timeSlots = [\r\n    \"09:00\",\r\n    \"09:30\",\r\n    \"10:00\",\r\n    \"10:30\",\r\n    \"11:00\",\r\n    \"11:30\",\r\n    \"12:00\",\r\n    \"12:30\",\r\n    \"14:00\",\r\n    \"14:30\",\r\n    \"15:00\",\r\n    \"15:30\",\r\n    \"16:00\",\r\n    \"16:30\",\r\n    \"17:00\",\r\n    \"17:30\",\r\n    \"18:00\",\r\n    \"18:30\",\r\n  ]\r\n\r\n  useEffect(() => {\r\n    fetchAppointments()\r\n    fetchPatients()\r\n    fetchDoctors()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedDate) {\r\n      fetchAppointmentsByDate(selectedDate)\r\n    }\r\n  }, [selectedDate])\r\n\r\n  const fetchAppointments = async () => {\r\n    setLoading(true)\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      const response = await fetch(\"http://localhost:8080/api/appointments\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        setAppointments(data)\r\n      } else {\r\n        handleError(\"Failed to fetch appointments\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Fetch appointments error:\", error)\r\n      handleError(\"Error loading appointments\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const fetchAppointmentsByDate = async (date) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      const response = await fetch(`http://localhost:8080/api/appointments/date/${date}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        setAppointments(data)\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Fetch appointments by date error:\", error)\r\n    }\r\n  }\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      const response = await fetch(\"http://localhost:8080/api/patients\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        setPatients(data)\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Fetch patients error:\", error)\r\n    }\r\n  }\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      const response = await fetch(\"http://localhost:8080/api/doctors\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        setDoctors(data)\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Fetch doctors error:\", error)\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target\r\n    setAppointmentForm((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const getAvailableTimeSlots = (doctorId, date) => {\r\n    if (!doctorId || !date) return timeSlots\r\n\r\n    const bookedSlots = appointments\r\n      .filter(\r\n        (apt) =>\r\n          apt.doctor._id === doctorId && apt.appointmentDate.split(\"T\")[0] === date && apt.status !== \"Cancelled\",\r\n      )\r\n      .map((apt) => apt.appointmentTime)\r\n\r\n    return timeSlots.filter((slot) => !bookedSlots.includes(slot))\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      const url = editingAppointment\r\n        ? `http://localhost:8080/api/appointments/${editingAppointment._id}`\r\n        : \"http://localhost:8080/api/appointments\"\r\n\r\n      const method = editingAppointment ? \"PUT\" : \"POST\"\r\n\r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(appointmentForm),\r\n      })\r\n\r\n      if (response.ok) {\r\n        handleSuccess(editingAppointment ? \"Appointment updated successfully\" : \"Appointment scheduled successfully\")\r\n        setShowModal(false)\r\n        setEditingAppointment(null)\r\n        resetForm()\r\n        fetchAppointments()\r\n      } else {\r\n        const error = await response.json()\r\n        handleError(error.message || \"Operation failed\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Submit error:\", error)\r\n      handleError(\"Error saving appointment\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleStatusChange = async (appointmentId, newStatus) => {\r\n    setLoading(true)\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n      const response = await fetch(`http://localhost:8080/api/appointments/${appointmentId}/status`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ status: newStatus }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        handleSuccess(\"Appointment status updated successfully\")\r\n        fetchAppointments()\r\n      } else {\r\n        handleError(\"Failed to update appointment status\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Status update error:\", error)\r\n      handleError(\"Error updating appointment status\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleEdit = (appointment) => {\r\n    setEditingAppointment(appointment)\r\n    setAppointmentForm({\r\n      patient: appointment.patient._id,\r\n      doctor: appointment.doctor._id,\r\n      appointmentDate: appointment.appointmentDate.split(\"T\")[0],\r\n      appointmentTime: appointment.appointmentTime,\r\n      reason: appointment.reason || \"\",\r\n      notes: appointment.notes || \"\",\r\n    })\r\n    setShowModal(true)\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setAppointmentForm({\r\n      patient: \"\",\r\n      doctor: \"\",\r\n      appointmentDate: \"\",\r\n      appointmentTime: \"\",\r\n      reason: \"\",\r\n      notes: \"\",\r\n    })\r\n  }\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case \"Scheduled\":\r\n        return \"status-scheduled\"\r\n      case \"Completed\":\r\n        return \"status-completed\"\r\n      case \"Cancelled\":\r\n        return \"status-cancelled\"\r\n      case \"No Show\":\r\n        return \"status-no-show\"\r\n      default:\r\n        return \"status-scheduled\"\r\n    }\r\n  }\r\n\r\n  if (loading && !showModal) {\r\n    return <LoadingSpinner message=\"Loading appointments...\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"appointment-scheduling-container\">\r\n      <Sidebar />\r\n      <div className=\"appointment-scheduling-content\">\r\n        <div className=\"page-header\">\r\n          <h1>📆 Appointment Scheduling</h1>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setEditingAppointment(null)\r\n              resetForm()\r\n              setShowModal(true)\r\n            }}\r\n          >\r\n            Schedule New Appointment\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"date-filter\">\r\n          <label className=\"form-label\">Filter by Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-input date-input\"\r\n            value={selectedDate}\r\n            onChange={(e) => setSelectedDate(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"appointments-table-container\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Appointment ID</th>\r\n                <th>Patient</th>\r\n                <th>Doctor</th>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Reason</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {appointments.map((appointment) => (\r\n                <tr key={appointment._id}>\r\n                  <td>{appointment.appointmentId}</td>\r\n                  <td>\r\n                    <div className=\"patient-info\">\r\n                      <strong>{appointment.patient?.name}</strong>\r\n                      <br />\r\n                      <small>{appointment.patient?.patientId}</small>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <div className=\"doctor-info\">\r\n                      <strong>Dr. {appointment.doctor?.name}</strong>\r\n                      <br />\r\n                      <small>{appointment.doctor?.specialization}</small>\r\n                    </div>\r\n                  </td>\r\n                  <td>{new Date(appointment.appointmentDate).toLocaleDateString()}</td>\r\n                  <td>{appointment.appointmentTime}</td>\r\n                  <td>{appointment.reason}</td>\r\n                  <td>\r\n                    <span className={`status-badge ${getStatusColor(appointment.status)}`}>{appointment.status}</span>\r\n                  </td>\r\n                  <td>\r\n                    <div className=\"action-buttons\">\r\n                      <button className=\"btn btn-secondary btn-sm\" onClick={() => handleEdit(appointment)}>\r\n                        Edit\r\n                      </button>\r\n                      {appointment.status === \"Scheduled\" && (\r\n                        <>\r\n                          <button\r\n                            className=\"btn btn-success btn-sm\"\r\n                            onClick={() => handleStatusChange(appointment._id, \"Completed\")}\r\n                          >\r\n                            Complete\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-danger btn-sm\"\r\n                            onClick={() => handleStatusChange(appointment._id, \"Cancelled\")}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          {appointments.length === 0 && (\r\n            <div className=\"no-data\">\r\n              <p>No appointments found for the selected date</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {showModal && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <div className=\"modal-header\">\r\n                <h2>{editingAppointment ? \"Edit Appointment\" : \"Schedule New Appointment\"}</h2>\r\n                <button\r\n                  className=\"close-btn\"\r\n                  onClick={() => {\r\n                    setShowModal(false)\r\n                    setEditingAppointment(null)\r\n                    resetForm()\r\n                  }}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n\r\n              <form onSubmit={handleSubmit} className=\"appointment-form\">\r\n                <div className=\"form-grid\">\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Patient *</label>\r\n                    <select\r\n                      name=\"patient\"\r\n                      className=\"form-select\"\r\n                      value={appointmentForm.patient}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select Patient</option>\r\n                      {patients.map((patient) => (\r\n                        <option key={patient._id} value={patient._id}>\r\n                          {patient.name} - {patient.patientId}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Doctor *</label>\r\n                    <select\r\n                      name=\"doctor\"\r\n                      className=\"form-select\"\r\n                      value={appointmentForm.doctor}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select Doctor</option>\r\n                      {doctors.map((doctor) => (\r\n                        <option key={doctor._id} value={doctor._id}>\r\n                          Dr. {doctor.name} - {doctor.specialization}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Appointment Date *</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"appointmentDate\"\r\n                      className=\"form-input\"\r\n                      value={appointmentForm.appointmentDate}\r\n                      onChange={handleInputChange}\r\n                      min={new Date().toISOString().split(\"T\")[0]}\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label className=\"form-label\">Appointment Time *</label>\r\n                    <select\r\n                      name=\"appointmentTime\"\r\n                      className=\"form-select\"\r\n                      value={appointmentForm.appointmentTime}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select Time</option>\r\n                      {getAvailableTimeSlots(appointmentForm.doctor, appointmentForm.appointmentDate).map((time) => (\r\n                        <option key={time} value={time}>\r\n                          {time}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\">Reason for Visit *</label>\r\n                  <textarea\r\n                    name=\"reason\"\r\n                    className=\"form-input\"\r\n                    rows=\"3\"\r\n                    value={appointmentForm.reason}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Describe the reason for the appointment...\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\">Additional Notes</label>\r\n                  <textarea\r\n                    name=\"notes\"\r\n                    className=\"form-input\"\r\n                    rows=\"2\"\r\n                    value={appointmentForm.notes}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Any additional notes or instructions...\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-actions\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => {\r\n                      setShowModal(false)\r\n                      setEditingAppointment(null)\r\n                      resetForm()\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n                    {loading ? \"Saving...\" : editingAppointment ? \"Update Appointment\" : \"Schedule Appointment\"}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppointmentScheduling\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}